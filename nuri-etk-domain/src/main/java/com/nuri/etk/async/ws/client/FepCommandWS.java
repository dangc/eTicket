package com.nuri.etk.async.ws.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2018-11-23T16:23:48.001+09:00
 * Generated source version: 2.7.0
 * 
 */
@WebService(targetNamespace = "http://server.ws.command.fep.aimir.com/", name = "CommandWS")
@XmlSeeAlso({ObjectFactory.class})
public interface FepCommandWS {

    @WebMethod
    @RequestWrapper(localName = "cmdSTSGeneralCommand", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSTSGeneralCommand")
    @ResponseWrapper(localName = "cmdSTSGeneralCommandResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSTSGeneralCommandResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.nuri.etk.async.ws.client.ResponseMap cmdSTSGeneralCommand(
        @WebParam(name = "ModemId", targetNamespace = "")
        String modemId,
        @WebParam(name = "MeterId", targetNamespace = "")
        String meterId,
        @WebParam(name = "RequestType", targetNamespace = "")
        String requestType,
        @WebParam(name = "Param", targetNamespace = "")
        String param
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "cmdSendIHDData", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSendIHDData")
    @ResponseWrapper(localName = "cmdSendIHDDataResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSendIHDDataResponse")
    public void cmdSendIHDData(
        @WebParam(name = "McuId", targetNamespace = "")
        String mcuId,
        @WebParam(name = "ModemId", targetNamespace = "")
        String modemId,
        @WebParam(name = "IHDData", targetNamespace = "")
        byte[] ihdData
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "cmdSTSBlockTariff", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSTSBlockTariff")
    @ResponseWrapper(localName = "cmdSTSBlockTariffResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSTSBlockTariffResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.nuri.etk.async.ws.client.ResponseMap cmdSTSBlockTariff(
        @WebParam(name = "ModemId", targetNamespace = "")
        String modemId,
        @WebParam(name = "MeterId", targetNamespace = "")
        String meterId,
        @WebParam(name = "RequestType", targetNamespace = "")
        String requestType,
        @WebParam(name = "Param", targetNamespace = "")
        String param,
        @WebParam(name = "GroupCrc", targetNamespace = "")
        String groupCrc
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "icmpPing", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.IcmpPing")
    @ResponseWrapper(localName = "icmpPingResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.IcmpPingResponse")
    @WebResult(name = "return", targetNamespace = "")
    public String icmpPing(
        @WebParam(name = "Commands", targetNamespace = "")
        java.util.List<String> commands
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "relayValveOn", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.RelayValveOn")
    @ResponseWrapper(localName = "relayValveOnResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.RelayValveOnResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.nuri.etk.async.ws.client.ResponseMap relayValveOn(
        @WebParam(name = "McuId", targetNamespace = "")
        String mcuId,
        @WebParam(name = "MeterId", targetNamespace = "")
        String meterId
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "traceroute", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.Traceroute")
    @ResponseWrapper(localName = "tracerouteResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.TracerouteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public String traceroute(
        @WebParam(name = "Commands", targetNamespace = "")
        java.util.List<String> commands
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "cmdSTSNetCharge", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSTSNetCharge")
    @ResponseWrapper(localName = "cmdSTSNetChargeResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdSTSNetChargeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public com.nuri.etk.async.ws.client.ResponseMap cmdSTSNetCharge(
        @WebParam(name = "ModemId", targetNamespace = "")
        String modemId,
        @WebParam(name = "MeterId", targetNamespace = "")
        String meterId,
        @WebParam(name = "Param", targetNamespace = "")
        String param
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "cmdTCPTrigger", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdTCPTrigger")
    @ResponseWrapper(localName = "cmdTCPTriggerResponse", targetNamespace = "http://server.ws.command.fep.aimir.com/", className = "com.aimir.etk.ws.client.CmdTCPTriggerResponse")
    @WebResult(name = "return", targetNamespace = "")
    public boolean cmdTCPTrigger(
        @WebParam(name = "Cmd", targetNamespace = "")
        String cmd,
        @WebParam(name = "IpAddr", targetNamespace = "")
        String ipAddr
    ) throws Exception_Exception;
}
